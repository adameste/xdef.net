using System;
using System.Collections.Generic;
using System.Text;
using System.Xml.Linq;
using xdef.net.Connection;
using xdef.net.Sys;
using xdef.net.Utils;

namespace xdef.net.Proc
{
    /// <summary>Interface of models in X-definition.</summary>
	/// <author>Vaclav Trojan</author>
    public class XXNode : RemoteObject
    {
        private const int FUNCTION_GETXXNAME = 1;
        private const int FUNCTION_GETXXNSURI = 2;
        private const int FUNCTION_GETNODENAME = 3;
        private const int FUNCTION_GETNODEURI = 4;
        private const int FUNCTION_GETUSEROBJECT_1 = 5;
        private const int FUNCTION_SETUSEROBJECT_1 = 6;
        private const int FUNCTION_SETUSEROBJECT_2 = 7;
        private const int FUNCTION_REMOVEUSEROBJECT = 8;
        private const int FUNCTION_GETUSEROBJECT_2 = 9;
        private const int FUNCTION_GETXPOS = 10;
        private const int FUNCTION_GETSPOSITION = 11;
        private const int FUNCTION_GETPARENT = 12;
        private const int FUNCTION_GETCHILDXXNODES = 13;
        private const int FUNCTION_GETXDDOCUMENT = 14;
        private const int FUNCTION_GETXDPOOL = 15;
        private const int FUNCTION_GETROOTXXELEMENT = 16;
        private const int FUNCTION_GETXXELEMENT = 17;
        private const int FUNCTION_GETXMELEMENT = 18;
        private const int FUNCTION_GETXDPOSITION = 19;
        private const int FUNCTION_GETXMDEFINITION = 20;
        private const int FUNCTION_GETVARIABLENAMES = 21;
        private const int FUNCTION_GETVARIABLE = 22;
        private const int FUNCTION_SETVARIABLE_1 = 23;
        private const int FUNCTION_SETVARIABLE_2 = 24;
        private const int FUNCTION_SETVARIABLE_3 = 25;
        private const int FUNCTION_SETVARIABLE_4 = 26;
        private const int FUNCTION_GETREPORTER = 27;
        private const int FUNCTION_GETREPORTWRITER = 28;
        private const int FUNCTION_ERRORWARNINGS = 29;
        private const int FUNCTION_ERRORS = 30;
        private const int FUNCTION_GETTEMPORARYREPORTER = 31;
        private const int FUNCTION_SETTEMPORARYREPORTER = 32;
        private const int FUNCTION_CLEARTEMPORARYREPORTER = 33;
        private const int FUNCTION_REMOVETEMPORARYREPORT = 34;
        private const int FUNCTION_COPYTEMPORARYREPORTS = 35;
        private const int FUNCTION_PUTTEMPORARYREPORT = 36;
        private const int FUNCTION_CHKTEMPORARYERRORS = 37;
        private const int FUNCTION_FATAL_1 = 38;
        private const int FUNCTION_ERROR_1 = 39;
        private const int FUNCTION_WARNING_1 = 40;
        private const int FUNCTION_FATAL_2 = 41;
        private const int FUNCTION_ERROR_2 = 42;
        private const int FUNCTION_WARNING_2 = 43;
        private const int FUNCTION_PUTREPORT = 44;
        private const int FUNCTION_GETXXNAMESPACECONTEXT = 45;
        private const int FUNCTION_GETXXFUNCTIONRESOLVER = 46;
        private const int FUNCTION_GETXXVARIABLERESOLVER = 47;
        private const int FUNCTION_GETPARSERESULT = 48;
        private const int FUNCTION_GETXDCONTEXT = 49;
        private const int FUNCTION_SETXDCONTEXT_1 = 50;
        private const int FUNCTION_SETXDCONTEXT_2 = 51;
        private const int FUNCTION_SETXDCONTEXT_3 = 52;
        private const int FUNCTION_SETXDCONTEXT_4 = 53;
        private const int FUNCTION_GETXMNODE = 54;
        private const int FUNCTION_GETXCOMPONENT = 55;
        private const int FUNCTION_SETXCOMPONENT = 56;

        internal XXNode(int objectId, Client client) : base(objectId, client)
        {
        }

        // Autogenerated method
        // public abstract java.lang.String getXXName()
        /// <summary>Get name of the model.</summary>
		/// <returns>The name of node.</returns>
        public string GetXXName()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETXXNAME, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadString();
                }
            }
        }

        // Autogenerated method
        // public abstract java.lang.String getXXNSURI()
        /// <summary>Get namespace URI of the model.</summary>
		/// <returns>namespace URI or <tt>null</tt>.</returns>
        public string GetXXNSURI()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETXXNSURI, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadString();
                }
            }
        }

        // Autogenerated method
        // public abstract java.lang.String getNodeName()
        /// <summary>Get name of actual node.</summary>
		/// <returns>The name of node.</returns>
        public string GetNodeName()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETNODENAME, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadString();
                }
            }
        }

        // Autogenerated method
        // public abstract java.lang.String getNodeURI()
        /// <summary>Get namespace URI of actual node.</summary>
		/// <returns>namespace URI or <tt>null</tt>.</returns>
        public string GetNodeURI()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETNODEURI, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadString();
                }
            }
        }

        // Autogenerated method
        // public abstract java.lang.Object getUserObject()
        //public Object GetUserObject()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETUSEROBJECT_1, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new Object(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void setUserObject(java.lang.Object)
        //public void SetUserObject(Object arg0)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_SETUSEROBJECT_1, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract java.lang.Object setUserObject(java.lang.String, java.lang.Object)
        //public Object SetUserObject(string arg0, Object arg1)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        builder.Add(arg1);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_SETUSEROBJECT_2, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new Object(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract java.lang.Object removeUserObject(java.lang.String)
        //public Object RemoveUserObject(string arg0)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_REMOVEUSEROBJECT, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new Object(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract java.lang.Object getUserObject(java.lang.String)
        //public Object GetUserObject(string arg0)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETUSEROBJECT_2, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new Object(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract java.lang.String getXPos()
        /// <summary>Get position of the node as a XPath expression string.</summary>
        /// <returns>position of the node as a XPath expression string.</returns>
        public string GetXPos()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETXPOS, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadString();
                }
            }
        }

        // Autogenerated method
        // public abstract org.xdef.sys.SPosition getSPosition()
        //public SPosition GetSPosition()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETSPOSITION, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new SPosition(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract org.xdef.proc.XXNode getParent()
        /// <summary>Return parent node.</summary>
        /// <returns>The parent node.</returns>
        public XXNode GetParent()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETPARENT, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    // Read response here
                    return new XXNode(reader.ReadInt32(), _client);
                }
            }
        }

        // Autogenerated method
        // public abstract org.xdef.proc.XXNode[] getChildXXNodes()
        /// <summary>Get array of XXNodes or null.</summary>
        /// <returns>array of XXNodes or null.</returns>
        public List<XXNode> GetChildXXNodes()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETCHILDXXNODES, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    // Read response here
                    var ret = new List<XXNode>();
                    int cnt = reader.ReadInt32();
                    for (int i = 0; i < cnt; i++)
                        ret.Add(new XXNode(reader.ReadInt32(), _client));
                    return ret;
                }
            }
        }

        // Autogenerated method
        // public abstract org.xdef.XDDocument getXDDocument()
        /// <summary>Get XDDocument.</summary>
        /// <returns>XDDocument.</returns>
        public XDDocument GetXDDocument()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETXDDOCUMENT, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    // Read response here
                    return new XDDocument(reader.ReadInt32(), _client);
                }
            }
        }

        // Autogenerated method
        // public abstract org.xdef.XDPool getXDPool()
        /// <summary>Get XDPool.</summary>
        /// <returns>XDPool.</returns>
        public XDPool GetXDPool()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETXDPOOL, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    // Read response here
                    return new XDPool(reader.ReadInt32(), _client);
                }
            }
        }

        // Autogenerated method
        // public abstract org.xdef.proc.XXElement getRootXXElement()
        //public XXElement GetRootXXElement()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETROOTXXELEMENT, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XXElement(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract org.xdef.proc.XXElement getXXElement()
        //public XXElement GetXXElement()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETXXELEMENT, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XXElement(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract org.xdef.model.XMElement getXMElement()
        //public XMElement GetXMElement()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETXMELEMENT, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XMElement(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract java.lang.String getXDPosition()
        /// <summary>Get XDPosition of the processed element.</summary>
        /// <returns>XDPosition of the processed element.</returns>
        public string GetXDPosition()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETXDPOSITION, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadString();
                }
            }
        }

        // Autogenerated method
        // public abstract org.xdef.model.XMDefinition getXMDefinition()
        //public XMDefinition GetXMDefinition()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETXMDEFINITION, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XMDefinition(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract java.lang.String[] getVariableNames()
        /// <summary>Get names of global variables.</summary>
        /// <returns>array of names of variables.</returns>
        public IEnumerable<string> GetVariableNames()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETVARIABLENAMES, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadStringArray();
                }
            }
        }

        // Autogenerated method
        // public abstract org.xdef.XDValue getVariable(java.lang.String)
        //public XDValue GetVariable(string arg0)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETVARIABLE, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XDValue(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void setVariable(java.lang.String, long)
        /// <summary>Set variable.</summary>
        /// <param name="name">name name of variable.</param>
        /// <param name="value">value to be set to the variable.</param>
        public void SetVariable(string name, long value)
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                builder.Add(name);
                builder.Add(value);
                var res = SendRequestWithResponse(new Request(FUNCTION_SETVARIABLE_1, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return;
                }
            }
        }

        // Autogenerated method
        // public abstract void setVariable(java.lang.String, double)
        /// <summary>Set integer variable.</summary>
        /// <param name="name">name name of variable.</param>
        /// <param name="value">value to be set to the variable.</param>
        public void SetVariable(string name, double value)
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                builder.Add(name);
                builder.Add(value);
                var res = SendRequestWithResponse(new Request(FUNCTION_SETVARIABLE_2, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return;
                }
            }
        }

        // Autogenerated method
        // public abstract void setVariable(java.lang.String, boolean)
        /// <summary>Set boolean variable.</summary>
		/// <param name="name">name name of variable.</param>
		/// <param name="value">value to be set to the variable.</param>
        public void SetVariable(string name, bool value)
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                builder.Add(name);
                builder.Add(value);
                var res = SendRequestWithResponse(new Request(FUNCTION_SETVARIABLE_3, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return;
                }
            }
        }

        // Autogenerated method
        // public abstract void setVariable(java.lang.String, java.lang.Object)
        //public void SetVariable(string arg0, Object arg1)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        builder.Add(arg1);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_SETVARIABLE_4, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract org.xdef.sys.SReporter getReporter()
        //public SReporter GetReporter()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETREPORTER, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new SReporter(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract org.xdef.sys.ReportWriter getReportWriter()
        /// <summary>Get report reader created from the reporter assigned to XDDocument.</summary>
        /// <returns>report reader.</returns>
        public ReportWriter GetReportWriter()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETREPORTWRITER, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    // Read response here
                    return new ReportWriterWrapper(_client, reader.ReadInt32());
                }
            }
        }

        // Autogenerated method
        // public abstract boolean errorWarnings()
        /// <summary>Check if errors, fatal errors, light errors or warnings were reported.</summary>
		/// <returns>
		/// <tt>true</tt> if and only if errors, fatal errors, light errors
		/// or warnings were reported.
		/// </returns>
        public bool ErrorWarnings()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_ERRORWARNINGS, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadBoolean();
                }
            }
        }

        // Autogenerated method
        // public abstract boolean errors()
        /// <summary>Check if errors, fatal errors or light errors were reported.</summary>
		/// <returns>
		/// <tt>true</tt> if and only if errors, fatal errors or light errors
		/// were reported.
		/// </returns>
        public bool Errors()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_ERRORS, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadBoolean();
                }
            }
        }

        // Autogenerated method
        // public abstract org.xdef.sys.ArrayReporter getTemporaryReporter()
        /// <summary>Get temporary reporter used by XD processor.</summary>
        /// <returns>ArrayReporter used as temporary reporter.</returns>
        public ArrayReporter GetTemporaryReporter()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_GETTEMPORARYREPORTER, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    // Read response here
                    return new ArrayReporter(reader.ReadInt32(), _client);
                }
            }
        }

        // Autogenerated method
        // public abstract org.xdef.sys.ArrayReporter setTemporaryReporter(org.xdef.sys.ArrayReporter)
        /// <summary>Set new temporary reporter.</summary>
		/// <param name="reporter">new temporary reporter.</param>
		/// <returns>ArrayReporter old temporary reporter.</returns>
        public ArrayReporter SetTemporaryReporter(ArrayReporter reporter)
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                builder.Add(reporter.ObjectId);
                var res = SendRequestWithResponse(new Request(FUNCTION_SETTEMPORARYREPORTER, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    // Read response here
                    return new ArrayReporter(reader.ReadInt32(), _client);
                }
            }
        }

        // Autogenerated method
        // public abstract void clearTemporaryReporter()
        /// <summary>Clear temporary reporter.</summary>
        public void ClearTemporaryReporter()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_CLEARTEMPORARYREPORTER, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return;
                }
            }
        }

        // Autogenerated method
        // public abstract boolean removeTemporaryReport(org.xdef.sys.Report)
        /// <summary>Remove report from temporary reporter.</summary>
		/// <param name="rep">report to be removed.</param>
		/// <returns>true if report was found and removed.</returns>
        public bool RemoveTemporaryReport(Report rep)
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                builder.Add(rep.ObjectId);
                var res = SendRequestWithResponse(new Request(FUNCTION_REMOVETEMPORARYREPORT, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadBoolean();
                }
            }
        }

        // Autogenerated method
        // public abstract boolean copyTemporaryReports()
        /// <summary>Copy temporary reports to global reporter.</summary>
		/// <returns>
		/// true if and only if temporary reporter contained errors before it
		/// was cleared.
		/// </returns>
        public bool CopyTemporaryReports()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_COPYTEMPORARYREPORTS, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadBoolean();
                }
            }
        }

        // Autogenerated method
        // public abstract void putTemporaryReport(org.xdef.sys.Report)
        /// <summary>Put message to temporary reporter.</summary>
		/// <param name="message">report to be added to the temporary reporter.</param>
        public void PutTemporaryReport(Report message)
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                builder.Add(message.ObjectId);
                var res = SendRequestWithResponse(new Request(FUNCTION_PUTTEMPORARYREPORT, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return;
                }
            }
        }

        // Autogenerated method
        // public abstract boolean chkTemporaryErrors()
        /// <summary>Check if temporary reporter has errors.</summary>
		/// <returns>true if temporary reporter has errors.</returns>
        public bool ChkTemporaryErrors()
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                var res = SendRequestWithResponse(new Request(FUNCTION_CHKTEMPORARYERRORS, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return reader.ReadBoolean();
                }
            }
        }

        // Autogenerated method
        // public abstract void fatal(java.lang.String, java.lang.String, java.lang.Object...)
        //public void Fatal(string arg0, string arg1, Object... arg2)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        builder.Add(arg1);
        //        builder.Add(arg2);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_FATAL_1, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void error(java.lang.String, java.lang.String, java.lang.Object...)
        //public void Error(string arg0, string arg1, Object... arg2)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        builder.Add(arg1);
        //        builder.Add(arg2);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_ERROR_1, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void warning(java.lang.String, java.lang.String, java.lang.Object...)
        //public void Warning(string arg0, string arg1, Object... arg2)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        builder.Add(arg1);
        //        builder.Add(arg2);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_WARNING_1, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void fatal(long, java.lang.Object...)
        //public void Fatal(long arg0, Object... arg1)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        builder.Add(arg1);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_FATAL_2, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void error(long, java.lang.Object...)
        //public void Error(long arg0, Object... arg1)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        builder.Add(arg1);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_ERROR_2, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void warning(long, java.lang.Object...)
        //public void Warning(long arg0, Object... arg1)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        builder.Add(arg1);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_WARNING_2, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void putReport(org.xdef.sys.Report)
        //public void PutReport(Report arg0)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_PUTREPORT, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract org.xdef.impl.xml.KNamespace getXXNamespaceContext()
        //public KNamespace GetXXNamespaceContext()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETXXNAMESPACECONTEXT, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new KNamespace(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract javax.xml.xpath.XPathFunctionResolver getXXFunctionResolver()
        //public XPathFunctionResolver GetXXFunctionResolver()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETXXFUNCTIONRESOLVER, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XPathFunctionResolver(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract javax.xml.xpath.XPathVariableResolver getXXVariableResolver()
        //public XPathVariableResolver GetXXVariableResolver()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETXXVARIABLERESOLVER, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XPathVariableResolver(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract org.xdef.XDParseResult getParseResult()
        //public XDParseResult GetParseResult()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETPARSERESULT, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XDParseResult(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract org.xdef.XDValue getXDContext()
        //public XDValue GetXDContext()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETXDCONTEXT, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XDValue(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void setXDContext(org.xdef.XDContainer)
        //public void SetXDContext(XDContainer arg0)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_SETXDCONTEXT_1, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void setXDContext(org.xdef.XDResultSet)
        //public void SetXDContext(XDResultSet arg0)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_SETXDCONTEXT_2, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void setXDContext(org.w3c.dom.Node)
        /// <summary>Set source element as context for create mode.</summary>
		/// <param name="node">XML node.</param>
        public void SetXDContext(XNode node)
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                builder.Add(node);
                var res = SendRequestWithResponse(new Request(FUNCTION_SETXDCONTEXT_3, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return;
                }
            }
        }

        // Autogenerated method
        // public abstract void setXDContext(java.lang.String)
        /// <summary>Set source element as context for create mode.</summary>
		/// <param name="source">string with pathname, URL or source of XML node.</param>
        public void SetXDContext(string source)
        {
            using (var builder = new BigEndianDataBuilder())
            {
                // Serialize args here
                builder.Add(source);
                var res = SendRequestWithResponse(new Request(FUNCTION_SETXDCONTEXT_4, builder.Build(), ObjectId));
                using (var reader = res.Reader)
                {
                    return;
                }
            }
        }

        // Autogenerated method
        // public abstract org.xdef.model.XMNode getXMNode()
        //public XMNode GetXMNode()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETXMNODE, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XMNode(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract org.xdef.component.XComponent getXComponent()
        //public XComponent GetXComponent()
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        var res = SendRequestWithResponse(new Request(FUNCTION_GETXCOMPONENT, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            // Read response here
        //            return new XComponent(reader.ReadInt32(), _client);
        //        }
        //    }
        //}

        // Autogenerated method
        // public abstract void setXComponent(org.xdef.component.XComponent)
        //public void SetXComponent(XComponent arg0)
        //{
        //    using (var builder = new BigEndianDataBuilder())
        //    {
        //        // Serialize args here
        //        builder.Add(arg0);
        //        var res = SendRequestWithResponse(new Request(FUNCTION_SETXCOMPONENT, builder.Build(), ObjectId));
        //        using (var reader = res.Reader)
        //        {
        //            return;
        //        }
        //    }
        //}

    }
}
